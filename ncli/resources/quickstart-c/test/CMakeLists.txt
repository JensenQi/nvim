include(cmocka)

# start to generate test.c
file(
  WRITE test.c
  "// this file is generated by cmake automatically, don't edit it.
#include <stdarg.h>
#include <stddef.h>
#include <setjmp.h>
#include <cmocka.h>

void ____run_finish____(void **state) { (void) state; }

")

if (NOT "$ENV{TESTCASE}" STREQUAL "")
    file(GLOB TEST_LIST "${PROJECT_SOURCE_DIR}/test/$ENV{TESTCASE}.c")
else()
    file(GLOB TEST_LIST "${PROJECT_SOURCE_DIR}/test/test_*.c")
endif()
foreach(test_file ${TEST_LIST})
  get_filename_component(test_name ${test_file} NAME_WE)
  file(APPEND test.c "extern void ${test_name}(void **state);\n")
endforeach()

file(APPEND test.c "
int main(int argc, char *argv[]) {
    const struct CMUnitTest tests[] = {
")
foreach(test_file ${TEST_LIST})
  get_filename_component(test_name ${test_file} NAME_WE)
  file(APPEND test.c "        cmocka_unit_test(${test_name}),\n")
endforeach()
file(APPEND test.c "        cmocka_unit_test(____run_finish____)
    };
    return cmocka_run_group_tests(tests, NULL, NULL);
}")
# end to generate test.c

file(GLOB FILE_LIST CONFIGURE_DEPENDS "${PROJECT_SOURCE_DIR}/test/*.c")
add_executable(testall ${FILE_LIST})

target_link_libraries(testall PRIVATE ${PROJECT_NAME}_lib cmocka)

